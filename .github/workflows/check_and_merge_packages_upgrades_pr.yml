name: Check & Merge Packages Upgrades PR

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * 2'

env:
  GIT_BRANCH_FOR_PACKAGES_UPGRADES: feature__packages_versions_update

jobs:
  check_packages_versions_upgrades_pr:
    name: 'Check Packages Versions'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: '22.13.1'
          registry-url: https://registry.npmjs.org/
      - name: Step 1 - ‚öôÔ∏è Setup GitHub Config
        run: |
          git config user.name "ü§ñ DailyBot"
          git config user.email "ops@dailybot.com"
          gh auth login --with-token <<< "${{ secrets.AUTOMATION_GITHUB_TOKEN }}"
      - name: Step 2 - Check if there is any pr with packages upgrades available
        id: check_upgrades_available_pr_step
        run: |
          PR_NUMBER=$(gh pr list -B main -s open -L 1 --json number,headRefName -q '.[] | select(.headRefName == "feature__packages_versions_update") | .number')
          if [ -z "$PR_NUMBER" ]; then
            echo "No open PRs from feature__packages_versions_update to main"
            exit 0
          fi
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
      - if: ${{ steps.check_upgrades_available_pr_step.outputs.pr_number }}
        name: Get PR body content
        id: get_pr_body_content_step
        run: |
          PR_NUMBER="${{ steps.check_upgrades_available_pr_step.outputs.pr_number }}"
          PR_TITLE=$(gh pr view $PR_NUMBER --json title -q '.title')
          PR_BODY=$(gh pr view $PR_NUMBER --json body -q '.body')
          echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT
          echo "pr_body=$(echo $PR_BODY | sed 's/\\n/\\\\n/g')" >> $GITHUB_OUTPUT
      - if: ${{ steps.check_upgrades_available_pr_step.outputs.pr_number }}
        name: Step 3 - Check PR mergeable state
        id: check_pr_mergeable_state_step
        run: |
          PR_NUMBER="${{ steps.check_upgrades_available_pr_step.outputs.pr_number }}"
          PR_DATA=$(gh api repos/:owner/:repo/pulls/$PR_NUMBER)
          PR_MERGEABLE_STATE=$(echo "$PR_DATA" | jq -r '.mergeable_state')
          if [ "$PR_MERGEABLE_STATE" == "clean" ]; then
            PR_MERGE_RESULT=$(gh pr merge $PR_NUMBER --merge)
            echo $PR_MERGE_RESULT
          fi
          echo "pr_mergeable_state=$PR_MERGEABLE_STATE" >> $GITHUB_OUTPUT

    outputs:
      pr_number: ${{ steps.check_upgrades_available_pr_step.outputs.pr_number }}
      pr_title: ${{ steps.get_pr_body_content_step.outputs.pr_title }}
      pr_body: ${{ steps.get_pr_body_content_step.outputs.pr_body }}
      pr_mergeable_state: ${{ steps.check_pr_mergeable_state_step.outputs.pr_mergeable_state }}
