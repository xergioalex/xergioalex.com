name: Code Check

on:
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 'Setup Application'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
      - name: Step 0 - 📁 Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Step 1 - ⚙️ Install Dependencies
        run: |
          npm install
          # Install specific dependencies for CI (x64)
          npm install --no-save @rollup/rollup-linux-x64-gnu@4.29.1 lightningcss-linux-x64-gnu@1.28.2 @esbuild/linux-x64@0.24.2

  validate_linters_and_code_format:
    needs: setup
    name: 'Validate Linters and Code Format'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
      - name: Step 0 - 📁 Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Step 1 - 🧪 Run astro checks
        run: npm run astro:check
      - name: Step 2 - 🧪 Run eslint linter
        run: npm run eslint:check
      - name: Step 3 - 🧪🧪 Run prettier
        run: npm run prettier:check

  validate_tests:
    needs: validate_linters_and_code_format
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.18.1'
      - name: Step 0 - 📁 Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Step 1 - 🧪 Run tests
        run: npm run test
