---
import { getCollection } from 'astro:content';
import BlogContainer from '@/components/blog/BlogContainer.astro';
import MainLayout from '@/layouts/MainLayout.astro';
import { getBlogPosts } from '@/lib/blog';

const lang: string = 'en';

export async function getStaticPaths() {
  const lang: string = 'en';

  // Obtener todos los posts para extraer tags únicos
  const allPosts = await getCollection('blog');
  const tagsResult = Array.from(
    new Set(allPosts.flatMap((post) => post.data.tags ?? []))
  );

  const paths = [];

  // Para cada tag, generar las rutas de paginación
  for (const tag of tagsResult) {
    // Obtener la primera página para calcular el total de páginas
    const tagPostsResult = await getBlogPosts({ lang, tag });
    const totalPages = tagPostsResult.totalPages;

    // Solo generar rutas de paginación si hay más de 1 página
    if (totalPages > 1) {
      // Generar rutas para cada página del tag (empezando desde la página 2)
      for (let i = 2; i <= totalPages; i++) {
        const pagePosts = await getBlogPosts({ lang, tag, page: i });
        const path = {
          params: { tag, page: i },
          props: {
            blogPostsResult: pagePosts,
            currentTag: tag,
          },
        };
        paths.push(path);
      }
    }
  }
  return paths;
}

const { blogPostsResult, currentTag } = Astro.props;
const { tag, page } = Astro.params;
---

<MainLayout
  lang={lang}
  title={`Artículos con tag: ${tag} - Página ${page}`}
  description={`Artículos etiquetados como ${tag}. Página ${page}.`}
>
  <BlogContainer blogPostsResult={blogPostsResult} currentTag={currentTag} />
</MainLayout>
