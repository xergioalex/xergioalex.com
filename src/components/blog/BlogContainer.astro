---
import BlogGrid from "@/components/blog/BlogGrid.astro";
import { getBlogPosts } from "@/lib/blog";
import type { BlogPostsResultType } from "@/lib/types";

interface Props {
  tag?: string;
  page?: number;
}

const { tag, page } = Astro.props as Props;

let blogPostsResult: BlogPostsResultType = await getBlogPosts({
  lang: "en",
  tag,
  page,
});

const allTags = Array.from(
  new Set(blogPostsResult.allPosts.flatMap((post) => post.data.tags ?? [])),
);

// Calculate the range of pages to show
const paginationRange = (start: number, end: number) =>
  Array.from({ length: end - start + 1 }, (_, i) => start + i);

const pageRange = paginationRange(1, blogPostsResult.totalPages);
---

<div class="main-container py-24">
  <h1 class="text-4xl font-extrabold mb-6">
    Artículos, Tutoriales & Historias
  </h1>
  <div class="mb-8 flex flex-wrap gap-2">
    {
      allTags.map((tag) => (
        <a
          href={`/blog/tag/${tag}/`}
          class="text-xs bg-blue-100 text-blue-800 px-2 py-0.5 rounded font-semibold"
        >
          #{tag}
        </a>
      ))
    }
  </div>

  <!-- Buscador -->
  <div class="mb-10">
    <input
      id="search"
      type="text"
      placeholder="Buscar artículos..."
      class="w-full md:w-1/2 px-4 py-2 rounded border border-gray-300 dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition"
      oninput="filterArticles(this.value)"
    />
  </div>

  <BlogGrid
    posts={blogPostsResult.postsResult}
    showPagination={blogPostsResult.totalPages > 1}
    currentPage={blogPostsResult.currentPage}
    lastPage={blogPostsResult.totalPages}
    pageRange={pageRange}
  />
</div>

<script is:inline>
  function filterArticles(query) {
    query = query.toLowerCase();
    document.querySelectorAll(".article-card").forEach((card) => {
      const text = card.innerText.toLowerCase();
      card.style.display = text.includes(query) ? "" : "none";
    });
  }
</script>
