---
import * as menus from '../collections/menu.json';
let { lang = 'en' } = Astro.props;
const currentPath = Astro.url.pathname;
const pathWithoutLang = currentPath.replace(/^\/(en|es)/, '');
---

<!-- This is an invisible div with relative position so that it takes up the height of the menu (because menu is absolute/fixed) -->
<div class="relative w-full h-20 opacity-0 pointer-events-none"></div>
<header id="header" class="absolute top-0 z-50 w-full h-20">
  <div
    class="flex items-center justify-between h-full max-w-5xl pl-6 pr-4 mx-auto border-b border-l-0 border-r-0 border-transparent select-none lg:border-r lg:border-l lg:rounded-b-xl"
  >
    <div>
      <a href={`/${lang}`}><b class="font-laomn text-neutral-600">X</b></a>
    </div>
    <div
      id="mobileMenuBackground"
      onclick="closeMobileMenu()"
      class="fixed inset-0 z-20 hidden w-screen h-screen duration-300 ease-out bg-white/90 dark:bg-neutral-950/90"
    >
    </div>
    <nav
      class="relative z-30 flex flex-row justify-end w-full text-sm text-neutral-500 dark:text-neutral-400 sm:flex-row"
    >
      <div
        id="menu"
        class="fixed top-[75px] ease-out duration-300 sm:top-0 w-full left-0 sm:py-0 pt-7 pb-4 dm:mx-0 left-0 z-40 flex-col items-end justify-start hidden w-full h-auto text-sm sm:text-base sm:h-auto sm:relative sm:flex-row sm:flex sm:text-sm sm:w-auto sm:pr-0 sm:pt-0"
      >
        <div class="absolute inset-0 top-0 right-0 block w-full h-full px-3 sm:hidden">
          <div
            class="relative w-full h-full bg-white border border-dashed border-neutral-300 dark:border-neutral-700 backdrop-blur-sm rounded-xl dark:bg-neutral-950"
          >
          </div>
        </div>
        {
          menus[lang].map((menu: { name: string; url: string }) => {
            return (
              <a
                href={menu.url}
                class="font-laomn relative flex items-center justify-center w-full px-3 py-2 font-medium tracking-wide text-center duration-200 ease-out sm:py-0 sm:mb-0 md:w-auto hover:text-neutral-900 dark:hover:text-white"
              >
                {menu.name}
              </a>
            );
          })
        }
      </div>
      <div class="flex flex-row items-center justify-center">
        <div class="action-dark">
          <div
            id="darkToggle"
            class="relative flex items-center pl-6 ml-4 font-medium tracking-wide cursor-pointer text-neutral-800 group dark:text-white order-3"
          >
            <div
              class="absolute left-0 flex items-center justify-center w-6 h-6 overflow-hidden border-b border-transparent horizon group-hover:border-neutral-600"
            >
              <svg
                class="absolute w-6 h-6 transition duration-700 transform ease"
                id="sun"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                viewBox="0 0 24 24"
                stroke="currentColor"
                ><path
                  d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
                ></path></svg
              >
              <svg
                class="absolute hidden w-6 h-6 transition duration-700 transform ease"
                id="moon"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                viewBox="0 0 24 24"
                stroke="currentColor"
                ><path d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
                ></path></svg
              >
            </div>
            <span class="hidden sm:inline-block">
              <span id="dayText" class="ml-2"></span>
              <span id="nightText" class="hidden ml-2"></span>
            </span>
          </div>
        </div>
        <div class="action-lang ml-4">
          <button
            id="lang-menu"
            type="button"
            class="inline-flex items-center justify-center bg-transparent border-0 shadow-none rounded-none p-0 m-0 text-xl leading-none align-middle focus:outline-none focus:ring-0 min-w-0 min-h-0"
            aria-haspopup="true"
            aria-expanded="false"
            onclick="document.getElementById('lang-dropdown').classList.toggle('hidden')"
          >
            {
              lang === 'es' ? (
                <span class="text-xl leading-none align-middle relative top-[2px]">ðŸ‡ªðŸ‡¸</span>
              ) : (
                <span class="text-xl leading-none align-middle relative top-[2px]">ðŸ‡¬ðŸ‡§</span>
              )
            }
            <svg
              class="ml-1 w-3 h-3 text-neutral-500"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              viewBox="0 0 24 24"
            >
              <path d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
          <div
            id="lang-dropdown"
            class="absolute right-0 mt-2 w-28 bg-white dark:bg-neutral-900 rounded-lg shadow-lg border border-neutral-200 dark:border-neutral-700 z-50 py-1 hidden"
          >
            {
              lang === 'es' ? (
                <a
                  href={`/en${pathWithoutLang}`}
                  class="flex items-center gap-2 px-3 py-1 hover:bg-grey-light transition-colors text-[15px] rounded-lg"
                >
                  <span class="text-xl">ðŸ‡¬ðŸ‡§</span>
                  <span>English</span>
                </a>
              ) : (
                <a
                  href={`/es${pathWithoutLang}`}
                  class="flex items-center gap-2 px-3 py-1 hover:bg-grey-light transition-colors text-[15px] rounded-lg"
                >
                  <span class="text-xl">ðŸ‡ªðŸ‡¸</span>
                  <span>EspaÃ±ol</span>
                </a>
              )
            }
          </div>
        </div>
        <div class="action-menu">
          <div
            id="closeMenu"
            class="flex flex-col items-end justify-center hidden w-6 h-6 ml-4 -translate-x-1 cursor-pointer sm:hidden"
          >
            <svg
              class="w-6 h-6 text-neutral-600 dark:text-neutral-200"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              viewBox="0 0 24 24"
              stroke="currentColor"><path d="M6 18L18 6M6 6l12 12"></path></svg
            >
          </div>
          <div id="openMenu" class="flex flex-col items-end justify-center w-6 h-6 ml-4 cursor-pointer sm:hidden">
            <svg
              class="w-8 h-8 dark:text-neutral-200"
              fill="none"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              viewBox="0 0 24 24"
              stroke="currentColor"><path d="M4 8h16M4 16h16"></path></svg
            >
          </div>
        </div>
      </div>
    </nav>
  </div>
</header>

<script>
  // Close the language dropdown if a click is made outside of it
  document.addEventListener('click', function (event) {
    const langMenu = document.getElementById('lang-menu');
    const langDropdown = document.getElementById('lang-dropdown');
    const target = event.target as Node;
    if (!langDropdown.classList.contains('hidden')) {
      if (!langDropdown.contains(target) && !langMenu.contains(target)) {
        langDropdown.classList.add('hidden');
      }
    }
  });
</script>
